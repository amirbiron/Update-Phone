const axios = require('axios');

async function searchGoogle(deviceName, originalQuery) {
    console.log("‚ñ∂Ô∏è Google Search: Initializing search...");
    const apiKey = process.env.GOOGLE_SEARCH_API_KEY;
    const engineId = process.env.GOOGLE_SEARCH_ENGINE_ID;

    if (!apiKey || !engineId) {
        console.warn('Google Search API key or Engine ID is not defined. Skipping Google search.');
        return [];
    }

    // ◊©◊ú◊ë 1: ◊ó◊ô◊§◊ï◊© ◊®◊ó◊ë ◊¢◊ù ◊î◊©◊ê◊ô◊ú◊™◊î ◊î◊û◊ß◊ï◊®◊ô◊™ ◊õ◊ì◊ô ◊ú◊™◊§◊ï◊° ◊ê◊™ ◊î◊î◊ß◊©◊®
    // ◊©◊ú◊ë 2: ◊î◊ï◊°◊§◊™ ◊©◊ù ◊î◊û◊õ◊©◊ô◊® ◊î◊†◊ß◊ô ◊õ◊ì◊ô ◊ú◊î◊ë◊ò◊ô◊ó ◊®◊ú◊ï◊ï◊†◊ò◊ô◊ï◊™
    // ◊©◊ú◊ë 3: ◊î◊ï◊°◊§◊™ ◊û◊ô◊ú◊ï◊™ ◊û◊§◊™◊ó ◊ß◊ë◊ï◊¢◊ï◊™ ◊ú◊û◊ô◊ß◊ï◊ì ◊ë◊†◊ï◊©◊ê◊ô ◊¢◊ì◊õ◊ï◊†◊ô◊ù
    const focusedQuery = `"${deviceName}" AND (${originalQuery}) (update OR review OR issues OR battery)`;

    const url = `https://www.googleapis.com/customsearch/v1`;
    const params = {
        key: apiKey,
        cx: engineId,
        q: focusedQuery,
        num: 10
    };

    try {
        console.log(`üîç Google Search: Searching with query: ${focusedQuery}`);
        const response = await axios.get(url, { params });
        const resultsCount = response.data.items ? response.data.items.length : 0;
        console.log(`‚úÖ Google Search: Found ${resultsCount} results.`);
        
        if (resultsCount > 0) {
            return response.data.items.map(item => ({
                title: item.title,
                link: item.link,
                snippet: item.snippet,
                source: item.displayLink || 'Google Search'
            }));
        }
        return [];
    } catch (error) {
        console.error('‚ùå Google Search Error:', error.response ? error.response.data : error.message);
        return [];
    }
}

module.exports = { searchGoogle };
